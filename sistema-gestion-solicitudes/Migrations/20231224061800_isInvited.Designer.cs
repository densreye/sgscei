// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sistema_gestion_solicitudes.Models;

#nullable disable

namespace sistema_gestion_solicitudes.Migrations
{
    [DbContext(typeof(GestionContext))]
    [Migration("20231224061800_isInvited")]
    partial class isInvited
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EspecialidadUser", b =>
                {
                    b.Property<int>("EspecialidadesId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("EspecialidadesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("EspecialidadUser");
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.Property<int>("PermisosId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("PermisosId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PermissionRole");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Anexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("FechaUltimaModificacion")
                        .HasColumnType("timestamp");

                    b.Property<int>("SolicitudDetalleId")
                        .HasColumnType("int");

                    b.Property<int>("TipoAnexoId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("SolicitudDetalleId");

                    b.HasIndex("TipoAnexoId");

                    b.ToTable("T_Anexo", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.AnexoField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<int>("AnexoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Nombre");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Value");

                    b.HasKey("Id")
                        .HasName("Id");

                    b.HasIndex("AnexoId");

                    b.ToTable("T_AnexoField", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Extension");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Nombre");

                    b.Property<int>("NumeroDescargas")
                        .HasColumnType("int");

                    b.Property<int>("SolicitudDetalleId")
                        .HasColumnType("int");

                    b.Property<int>("TipoArchivoId")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Url");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("TipoArchivoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("T_Archivo", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("ArchivoId")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAsignacion")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("timestamp");

                    b.Property<int>("SolicitudDetalleId")
                        .HasColumnType("int");

                    b.Property<int>("UserAsignadoId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("ArchivoId")
                        .IsUnique();

                    b.HasIndex("DocumentoId");

                    b.HasIndex("SolicitudDetalleId");

                    b.HasIndex("UserAsignadoId");

                    b.ToTable("T_Asignacion", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<bool>("Estado")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("T_Especialidad", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.EstadoSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("T_Estado_Solicitud", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.InvitacionLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("InvitacionLink");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("T_Permiso", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Resolucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<int>("ArchivoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEmision")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaEmision");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("Observacion");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("ArchivoId")
                        .IsUnique();

                    b.HasIndex("SolicitudId")
                        .IsUnique();

                    b.ToTable("T_Resolucion", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<bool>("Estado")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Estado");

                    b.Property<int>("MaxUsers")
                        .HasColumnType("int")
                        .HasColumnName("MaxUsers");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("T_Rol", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<bool?>("Apelacion")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Apelacion");

                    b.Property<string>("Codigo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Codigo");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCierre");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion");

                    b.Property<DateTime?>("FechaRevision")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaRevision");

                    b.Property<string>("Titulo")
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("EstadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("T_Solicitud", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.SolicitudDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("ArchivosSolicitados")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ArchivosSolicitados");

                    b.Property<bool>("Factibilidad")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Factibilidad");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Observacion");

                    b.Property<bool>("OtrosArchivos")
                        .HasMaxLength(1)
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("OtrosArchivos");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("SolicitudId")
                        .IsUnique();

                    b.ToTable("T_Solicitud_Detalle", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.TipoAnexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Subtitulo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Subtitulo");

                    b.Property<string>("TituloPrincipal")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("TituloPrincipal");

                    b.HasKey("Id")
                        .HasName("Id");

                    b.ToTable("T_Tipo_Anexo", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.TipoArchivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("T_Tipo_Archivo", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.TipoSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<int>("DiasPlazo")
                        .HasColumnType("int")
                        .HasColumnName("DiasPlazo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("T_Tipo_Solicitud", (string)null);
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("ContrasenaHash")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("FechaUltimoLogin")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsInvited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("T_User", (string)null);
                });

            modelBuilder.Entity("EspecialidadUser", b =>
                {
                    b.HasOne("sistema_gestion_solicitudes.Models.Especialidad", null)
                        .WithMany()
                        .HasForeignKey("EspecialidadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistema_gestion_solicitudes.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.HasOne("sistema_gestion_solicitudes.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermisosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistema_gestion_solicitudes.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("sistema_gestion_solicitudes.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistema_gestion_solicitudes.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Anexo", b =>
                {
                    b.HasOne("sistema_gestion_solicitudes.Models.SolicitudDetalle", "SolicitudDetalle")
                        .WithMany("Anexos")
                        .HasForeignKey("SolicitudDetalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistema_gestion_solicitudes.Models.TipoAnexo", "TipoAnexo")
                        .WithMany("Anexos")
                        .HasForeignKey("TipoAnexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolicitudDetalle");

                    b.Navigation("TipoAnexo");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.AnexoField", b =>
                {
                    b.HasOne("sistema_gestion_solicitudes.Models.Anexo", null)
                        .WithMany("AnexosField")
                        .HasForeignKey("AnexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Archivo", b =>
                {
                    b.HasOne("sistema_gestion_solicitudes.Models.TipoArchivo", "TipoArchivo")
                        .WithMany("Archivos")
                        .HasForeignKey("TipoArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistema_gestion_solicitudes.Models.User", "Usuario")
                        .WithMany("Archivos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoArchivo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Asignacion", b =>
                {
                    b.HasOne("sistema_gestion_solicitudes.Models.Archivo", null)
                        .WithOne()
                        .HasForeignKey("sistema_gestion_solicitudes.Models.Asignacion", "ArchivoId");

                    b.HasOne("sistema_gestion_solicitudes.Models.Archivo", "Documento")
                        .WithMany()
                        .HasForeignKey("DocumentoId");

                    b.HasOne("sistema_gestion_solicitudes.Models.SolicitudDetalle", null)
                        .WithMany("Asignaciones")
                        .HasForeignKey("SolicitudDetalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistema_gestion_solicitudes.Models.User", "UserAsignado")
                        .WithMany()
                        .HasForeignKey("UserAsignadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documento");

                    b.Navigation("UserAsignado");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Resolucion", b =>
                {
                    b.HasOne("sistema_gestion_solicitudes.Models.Archivo", "Archivo")
                        .WithOne()
                        .HasForeignKey("sistema_gestion_solicitudes.Models.Resolucion", "ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistema_gestion_solicitudes.Models.Solicitud", null)
                        .WithOne("Resolucion")
                        .HasForeignKey("sistema_gestion_solicitudes.Models.Resolucion", "SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Solicitud", b =>
                {
                    b.HasOne("sistema_gestion_solicitudes.Models.EstadoSolicitud", "Estado")
                        .WithMany("Solicitudes")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistema_gestion_solicitudes.Models.User", "Usuario")
                        .WithMany("Solicitudes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.SolicitudDetalle", b =>
                {
                    b.HasOne("sistema_gestion_solicitudes.Models.Solicitud", null)
                        .WithOne("SolicitudDetalle")
                        .HasForeignKey("sistema_gestion_solicitudes.Models.SolicitudDetalle", "SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Anexo", b =>
                {
                    b.Navigation("AnexosField");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.EstadoSolicitud", b =>
                {
                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.Solicitud", b =>
                {
                    b.Navigation("Resolucion");

                    b.Navigation("SolicitudDetalle");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.SolicitudDetalle", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.TipoAnexo", b =>
                {
                    b.Navigation("Anexos");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.TipoArchivo", b =>
                {
                    b.Navigation("Archivos");
                });

            modelBuilder.Entity("sistema_gestion_solicitudes.Models.User", b =>
                {
                    b.Navigation("Archivos");

                    b.Navigation("Solicitudes");
                });
#pragma warning restore 612, 618
        }
    }
}
